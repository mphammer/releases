apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap,AlertSecret"
  labels:
    operator.synopsys.com/group-id: "Alert"
    app: alert
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-alert
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    app: alert
    name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: alert
        name: {{ .Release.Name }}
      name: {{ .Release.Name }}-alert
    spec:
      containers:
        {{- if .Values.enableCertificateSecret }}
        - env:
          - name: RUN_SECRETS_DIR
            valueFrom:
              fieldRef:
                 fieldPath: metadata.name
        {{- end }}
        - envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-blackduck-alert-config
            - secretRef:
                name: {{ .Release.Name }}-alert-secret
          image: {{ .Values.alert.image }}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/docker-healthcheck.sh
                - https://localhost:8443/alert/api/about
            failureThreshold: 5
            initialDelaySeconds: 240
            periodSeconds: 30
            timeoutSeconds: 10
          name: blackduck-alert
          ports:
            - containerPort: 8443
              protocol: TCP
          resources:
            limits:
              memory: {{ .Values.alert.limitMemory }}
            requests:
              memory: {{ .Values.alert.requestMemory }}
          volumeMounts:
          - mountPath: /opt/blackduck/alert/alert-config
            name: dir-alert
          {{- if .Values.enableCertificateSecret }}
          - mountPath: /tmp/secrets/WEBSERVER_CUSTOM_CERT_FILE
            name: certificate
            subPath: WEBSERVER_CUSTOM_CERT_FILE
          - mountPath: /tmp/secrets/WEBSERVER_CUSTOM_KEY_FILE
            name: certificate
            subPath: WEBSERVER_CUSTOM_KEY_FILE
          - mountPath: /tmp/secrets/cacerts
            name: certificate
            subPath: cacerts
          {{- end }}
      dnsPolicy: ClusterFirst
      {{- with .Values.alert.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.alert.affinity }}
      affinity:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.alert.tolerations }}
      tolerations:
      {{ toYaml . | indent 2 }}
      {{- end }}
      volumes:
      {{- if .Values.enablePersistentStorage }}
      - name: dir-alert
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-alert-pvc
      {{- else }}
        - emptyDir: {}
          name: dir-alert
      {{- end }}
      {{- if .Values.enableCertificateSecret }}
      - name: certificate
        secret:
          defaultMode: 292
          secretName: {{ .Release.Name }}-alert-certificate
      {{- end }}
      
---

apiVersion: v1
kind: Service
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap,AlertSecret"
  labels:
    operator.synopsys.com/group-id: "Alert"
    app: alert
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-alert
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: port-8443
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: alert
    name: {{ .Release.Name }}
  type: ClusterIP
---

apiVersion: v1
kind: ConfigMap
data:
  {{- if .Values.enableStandalone }}
  HUB_CFSSL_HOST: {{ .Release.Name }}-alert-cfssl
  {{- end }}
  {{- range $key, $val := .Values.environs}}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: ""
  labels:
    operator.synopsys.com/group-id: "ConfigMap"
    app: alert
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-blackduck-alert-config
  namespace: {{ .Release.Namespace }}
---

apiVersion: v1
kind: Secret
data:
  {{- range $key, $val := .Values.secrets }}
  {{ $key }}: {{ $val }}
  {{- end }}
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap"
  labels:
    operator.synopsys.com/group-id: "AlertSecret"
    app: alert
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-alert-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
---

{{ if .Values.enableCertificateSecret -}}
apiVersion: v1
data:
  WEBSERVER_CUSTOM_CERT_FILE: {{ .Values.javaKeystore }}
  WEBSERVER_CUSTOM_KEY_FILE: {{ .Values.certificate }}
  cacerts: {{ .Values.certificateKey }}
kind: Secret
metadata:
  labels:
    app: alert
    component: alert
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-alert-certificate
  namespace: {{ .Release.Namespace }}
type: Opaque
---
{{- end }}

{{ if .Values.enablePersistentStorage -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: ""
  labels:
    operator.synopsys.com/group-id: "AlertPvc"
    app: alert
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-alert-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.pvcSize }}
{{ if .Values.storageClassName }}
  storageClassName: {{ .Values.storageClassName }}
{{ end -}}
---
{{- end }}

{{ if .Values.exposeui -}}
apiVersion: v1
kind: Service
metadata:
  annotations:
    operator.synopsys.com/group-dependencies: "ConfigMap,AlertSecret"
  labels:
    operator.synopsys.com/group-id: "Alert"
    app: alert
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-alert
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - name: port-8443
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app: alert
    name: {{ .Release.Name }}
  type: {{ .Values.exposeui.exposedServiceType }}
---
{{- end }}